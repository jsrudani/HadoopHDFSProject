/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.hadoop.mapreduce.jobhistory;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class JobFinished extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"JobFinished\",\"namespace\":\"org.apache.hadoop.mapreduce.jobhistory\",\"fields\":[{\"name\":\"jobid\",\"type\":\"string\"},{\"name\":\"finishTime\",\"type\":\"long\"},{\"name\":\"finishedMaps\",\"type\":\"int\"},{\"name\":\"finishedReduces\",\"type\":\"int\"},{\"name\":\"failedMaps\",\"type\":\"int\"},{\"name\":\"failedReduces\",\"type\":\"int\"},{\"name\":\"totalCounters\",\"type\":{\"type\":\"record\",\"name\":\"JhCounters\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"groups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"JhCounterGroup\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"displayName\",\"type\":\"string\"},{\"name\":\"counts\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"JhCounter\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"displayName\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"long\"}]}}}]}}}]}},{\"name\":\"mapCounters\",\"type\":\"JhCounters\"},{\"name\":\"reduceCounters\",\"type\":\"JhCounters\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence jobid;
  @Deprecated public long finishTime;
  @Deprecated public int finishedMaps;
  @Deprecated public int finishedReduces;
  @Deprecated public int failedMaps;
  @Deprecated public int failedReduces;
  @Deprecated public org.apache.hadoop.mapreduce.jobhistory.JhCounters totalCounters;
  @Deprecated public org.apache.hadoop.mapreduce.jobhistory.JhCounters mapCounters;
  @Deprecated public org.apache.hadoop.mapreduce.jobhistory.JhCounters reduceCounters;

  /**
   * Default constructor.
   */
  public JobFinished() {}

  /**
   * All-args constructor.
   */
  public JobFinished(java.lang.CharSequence jobid, java.lang.Long finishTime, java.lang.Integer finishedMaps, java.lang.Integer finishedReduces, java.lang.Integer failedMaps, java.lang.Integer failedReduces, org.apache.hadoop.mapreduce.jobhistory.JhCounters totalCounters, org.apache.hadoop.mapreduce.jobhistory.JhCounters mapCounters, org.apache.hadoop.mapreduce.jobhistory.JhCounters reduceCounters) {
    this.jobid = jobid;
    this.finishTime = finishTime;
    this.finishedMaps = finishedMaps;
    this.finishedReduces = finishedReduces;
    this.failedMaps = failedMaps;
    this.failedReduces = failedReduces;
    this.totalCounters = totalCounters;
    this.mapCounters = mapCounters;
    this.reduceCounters = reduceCounters;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return jobid;
    case 1: return finishTime;
    case 2: return finishedMaps;
    case 3: return finishedReduces;
    case 4: return failedMaps;
    case 5: return failedReduces;
    case 6: return totalCounters;
    case 7: return mapCounters;
    case 8: return reduceCounters;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: jobid = (java.lang.CharSequence)value$; break;
    case 1: finishTime = (java.lang.Long)value$; break;
    case 2: finishedMaps = (java.lang.Integer)value$; break;
    case 3: finishedReduces = (java.lang.Integer)value$; break;
    case 4: failedMaps = (java.lang.Integer)value$; break;
    case 5: failedReduces = (java.lang.Integer)value$; break;
    case 6: totalCounters = (org.apache.hadoop.mapreduce.jobhistory.JhCounters)value$; break;
    case 7: mapCounters = (org.apache.hadoop.mapreduce.jobhistory.JhCounters)value$; break;
    case 8: reduceCounters = (org.apache.hadoop.mapreduce.jobhistory.JhCounters)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'jobid' field.
   */
  public java.lang.CharSequence getJobid() {
    return jobid;
  }

  /**
   * Sets the value of the 'jobid' field.
   * @param value the value to set.
   */
  public void setJobid(java.lang.CharSequence value) {
    this.jobid = value;
  }

  /**
   * Gets the value of the 'finishTime' field.
   */
  public java.lang.Long getFinishTime() {
    return finishTime;
  }

  /**
   * Sets the value of the 'finishTime' field.
   * @param value the value to set.
   */
  public void setFinishTime(java.lang.Long value) {
    this.finishTime = value;
  }

  /**
   * Gets the value of the 'finishedMaps' field.
   */
  public java.lang.Integer getFinishedMaps() {
    return finishedMaps;
  }

  /**
   * Sets the value of the 'finishedMaps' field.
   * @param value the value to set.
   */
  public void setFinishedMaps(java.lang.Integer value) {
    this.finishedMaps = value;
  }

  /**
   * Gets the value of the 'finishedReduces' field.
   */
  public java.lang.Integer getFinishedReduces() {
    return finishedReduces;
  }

  /**
   * Sets the value of the 'finishedReduces' field.
   * @param value the value to set.
   */
  public void setFinishedReduces(java.lang.Integer value) {
    this.finishedReduces = value;
  }

  /**
   * Gets the value of the 'failedMaps' field.
   */
  public java.lang.Integer getFailedMaps() {
    return failedMaps;
  }

  /**
   * Sets the value of the 'failedMaps' field.
   * @param value the value to set.
   */
  public void setFailedMaps(java.lang.Integer value) {
    this.failedMaps = value;
  }

  /**
   * Gets the value of the 'failedReduces' field.
   */
  public java.lang.Integer getFailedReduces() {
    return failedReduces;
  }

  /**
   * Sets the value of the 'failedReduces' field.
   * @param value the value to set.
   */
  public void setFailedReduces(java.lang.Integer value) {
    this.failedReduces = value;
  }

  /**
   * Gets the value of the 'totalCounters' field.
   */
  public org.apache.hadoop.mapreduce.jobhistory.JhCounters getTotalCounters() {
    return totalCounters;
  }

  /**
   * Sets the value of the 'totalCounters' field.
   * @param value the value to set.
   */
  public void setTotalCounters(org.apache.hadoop.mapreduce.jobhistory.JhCounters value) {
    this.totalCounters = value;
  }

  /**
   * Gets the value of the 'mapCounters' field.
   */
  public org.apache.hadoop.mapreduce.jobhistory.JhCounters getMapCounters() {
    return mapCounters;
  }

  /**
   * Sets the value of the 'mapCounters' field.
   * @param value the value to set.
   */
  public void setMapCounters(org.apache.hadoop.mapreduce.jobhistory.JhCounters value) {
    this.mapCounters = value;
  }

  /**
   * Gets the value of the 'reduceCounters' field.
   */
  public org.apache.hadoop.mapreduce.jobhistory.JhCounters getReduceCounters() {
    return reduceCounters;
  }

  /**
   * Sets the value of the 'reduceCounters' field.
   * @param value the value to set.
   */
  public void setReduceCounters(org.apache.hadoop.mapreduce.jobhistory.JhCounters value) {
    this.reduceCounters = value;
  }

  /** Creates a new JobFinished RecordBuilder */
  public static org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder newBuilder() {
    return new org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder();
  }
  
  /** Creates a new JobFinished RecordBuilder by copying an existing Builder */
  public static org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder newBuilder(org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder other) {
    return new org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder(other);
  }
  
  /** Creates a new JobFinished RecordBuilder by copying an existing JobFinished instance */
  public static org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder newBuilder(org.apache.hadoop.mapreduce.jobhistory.JobFinished other) {
    return new org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder(other);
  }
  
  /**
   * RecordBuilder for JobFinished instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<JobFinished>
    implements org.apache.avro.data.RecordBuilder<JobFinished> {

    private java.lang.CharSequence jobid;
    private long finishTime;
    private int finishedMaps;
    private int finishedReduces;
    private int failedMaps;
    private int failedReduces;
    private org.apache.hadoop.mapreduce.jobhistory.JhCounters totalCounters;
    private org.apache.hadoop.mapreduce.jobhistory.JhCounters mapCounters;
    private org.apache.hadoop.mapreduce.jobhistory.JhCounters reduceCounters;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.hadoop.mapreduce.jobhistory.JobFinished.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing JobFinished instance */
    private Builder(org.apache.hadoop.mapreduce.jobhistory.JobFinished other) {
            super(org.apache.hadoop.mapreduce.jobhistory.JobFinished.SCHEMA$);
      if (isValidValue(fields()[0], other.jobid)) {
        this.jobid = data().deepCopy(fields()[0].schema(), other.jobid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.finishTime)) {
        this.finishTime = data().deepCopy(fields()[1].schema(), other.finishTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.finishedMaps)) {
        this.finishedMaps = data().deepCopy(fields()[2].schema(), other.finishedMaps);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.finishedReduces)) {
        this.finishedReduces = data().deepCopy(fields()[3].schema(), other.finishedReduces);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.failedMaps)) {
        this.failedMaps = data().deepCopy(fields()[4].schema(), other.failedMaps);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.failedReduces)) {
        this.failedReduces = data().deepCopy(fields()[5].schema(), other.failedReduces);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.totalCounters)) {
        this.totalCounters = data().deepCopy(fields()[6].schema(), other.totalCounters);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.mapCounters)) {
        this.mapCounters = data().deepCopy(fields()[7].schema(), other.mapCounters);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.reduceCounters)) {
        this.reduceCounters = data().deepCopy(fields()[8].schema(), other.reduceCounters);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'jobid' field */
    public java.lang.CharSequence getJobid() {
      return jobid;
    }
    
    /** Sets the value of the 'jobid' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setJobid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.jobid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'jobid' field has been set */
    public boolean hasJobid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'jobid' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearJobid() {
      jobid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'finishTime' field */
    public java.lang.Long getFinishTime() {
      return finishTime;
    }
    
    /** Sets the value of the 'finishTime' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setFinishTime(long value) {
      validate(fields()[1], value);
      this.finishTime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'finishTime' field has been set */
    public boolean hasFinishTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'finishTime' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearFinishTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'finishedMaps' field */
    public java.lang.Integer getFinishedMaps() {
      return finishedMaps;
    }
    
    /** Sets the value of the 'finishedMaps' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setFinishedMaps(int value) {
      validate(fields()[2], value);
      this.finishedMaps = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'finishedMaps' field has been set */
    public boolean hasFinishedMaps() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'finishedMaps' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearFinishedMaps() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'finishedReduces' field */
    public java.lang.Integer getFinishedReduces() {
      return finishedReduces;
    }
    
    /** Sets the value of the 'finishedReduces' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setFinishedReduces(int value) {
      validate(fields()[3], value);
      this.finishedReduces = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'finishedReduces' field has been set */
    public boolean hasFinishedReduces() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'finishedReduces' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearFinishedReduces() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'failedMaps' field */
    public java.lang.Integer getFailedMaps() {
      return failedMaps;
    }
    
    /** Sets the value of the 'failedMaps' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setFailedMaps(int value) {
      validate(fields()[4], value);
      this.failedMaps = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'failedMaps' field has been set */
    public boolean hasFailedMaps() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'failedMaps' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearFailedMaps() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'failedReduces' field */
    public java.lang.Integer getFailedReduces() {
      return failedReduces;
    }
    
    /** Sets the value of the 'failedReduces' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setFailedReduces(int value) {
      validate(fields()[5], value);
      this.failedReduces = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'failedReduces' field has been set */
    public boolean hasFailedReduces() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'failedReduces' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearFailedReduces() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'totalCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JhCounters getTotalCounters() {
      return totalCounters;
    }
    
    /** Sets the value of the 'totalCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setTotalCounters(org.apache.hadoop.mapreduce.jobhistory.JhCounters value) {
      validate(fields()[6], value);
      this.totalCounters = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'totalCounters' field has been set */
    public boolean hasTotalCounters() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'totalCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearTotalCounters() {
      totalCounters = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'mapCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JhCounters getMapCounters() {
      return mapCounters;
    }
    
    /** Sets the value of the 'mapCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setMapCounters(org.apache.hadoop.mapreduce.jobhistory.JhCounters value) {
      validate(fields()[7], value);
      this.mapCounters = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'mapCounters' field has been set */
    public boolean hasMapCounters() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'mapCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearMapCounters() {
      mapCounters = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'reduceCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JhCounters getReduceCounters() {
      return reduceCounters;
    }
    
    /** Sets the value of the 'reduceCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder setReduceCounters(org.apache.hadoop.mapreduce.jobhistory.JhCounters value) {
      validate(fields()[8], value);
      this.reduceCounters = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'reduceCounters' field has been set */
    public boolean hasReduceCounters() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'reduceCounters' field */
    public org.apache.hadoop.mapreduce.jobhistory.JobFinished.Builder clearReduceCounters() {
      reduceCounters = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public JobFinished build() {
      try {
        JobFinished record = new JobFinished();
        record.jobid = fieldSetFlags()[0] ? this.jobid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.finishTime = fieldSetFlags()[1] ? this.finishTime : (java.lang.Long) defaultValue(fields()[1]);
        record.finishedMaps = fieldSetFlags()[2] ? this.finishedMaps : (java.lang.Integer) defaultValue(fields()[2]);
        record.finishedReduces = fieldSetFlags()[3] ? this.finishedReduces : (java.lang.Integer) defaultValue(fields()[3]);
        record.failedMaps = fieldSetFlags()[4] ? this.failedMaps : (java.lang.Integer) defaultValue(fields()[4]);
        record.failedReduces = fieldSetFlags()[5] ? this.failedReduces : (java.lang.Integer) defaultValue(fields()[5]);
        record.totalCounters = fieldSetFlags()[6] ? this.totalCounters : (org.apache.hadoop.mapreduce.jobhistory.JhCounters) defaultValue(fields()[6]);
        record.mapCounters = fieldSetFlags()[7] ? this.mapCounters : (org.apache.hadoop.mapreduce.jobhistory.JhCounters) defaultValue(fields()[7]);
        record.reduceCounters = fieldSetFlags()[8] ? this.reduceCounters : (org.apache.hadoop.mapreduce.jobhistory.JhCounters) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
